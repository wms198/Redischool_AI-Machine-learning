<<<<<<< HEAD
                        <div>
                            <SelectionIndicator selectedElements={selectedElements} setSelectedElements={setSelectedElements}/>
                            <form onSubmit={handleSubmit} className="flex items-center gap-2">
                                <input
                                    type="file"
                                    ref={fileInputRef}
                                    onChange={handleFileSelection}
                                    className="hidden"
                                    accept="image/jpeg,image/png,application/pdf"
                                    multiple
                                />
                                <button
=======
                        <form onSubmit={handleSubmit} className="flex items-center gap-2">
                            {/* Status indicator */}
                                {preview.isLoading && (
                                    <div className="flex items-center gap-2 text-gray-500 dark:text-gray-300">
                                        <Spinner size="sm"/>
                                        <span>{t('conversation:generatingWebsite', 'Website is generating, please wait...')}</span>
                                    </div>
                                )}  
                            <input
                                type="file"
                                ref={fileInputRef}
                                onChange={handleFileSelection}
                                className="hidden"
                                disabled={chatDisabled}
                                accept="image/jpeg,image/png,application/pdf"
                                multiple
                            />
                            <button
                                type="button"
                                onClick={() => fileInputRef.current?.click()}
                                className="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-full transition-colors"
                            >
                                <Paperclip className="w-5 h-5"/>
                            </button>
                            <button
                                type="button"
                                onClick={toggleRecording}
                                disabled={chatDisabled}
                                className={`p-2 rounded-full transition-colors ${
                                    isRecording
                                        ? 'text-red-500 bg-red-50 dark:bg-red-900/20'
                                        : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'
                                }`}
                            >
                                {isRecording ? <StopCircle className="w-5 h-5"/> : <Mic className="w-5 h-5"/>}
                            </button>
                            {/* Input Container */}
                            <div className="flex-1">
                            <Input
                                type="text"
                                value={inputMessage}
                                onChange={(e) => setInputMessage(e.target.value)}
                                placeholder={t('conversation:typeMessage')}
                                className="w-full"
                               disabled={chatDisabled}
                            />
                            </div>
                            <Button
                                type="submit"
                                variant="primary"
                                disabled={(chatDisabled || !inputMessage.trim() && selectedFiles.length === 0)}
                                icon={<Send className="w-5 h-5"/>}
                            >
                                {t('conversation:send')}
                            </Button>
                            {preview.isLoading && (
                                <Button
>>>>>>> develop









                        <div>
                            <SelectionIndicator selectedElements={selectedElements} setSelectedElements={setSelectedElements}/>
                            <form onSubmit={handleSubmit} className="flex items-center gap-2">
                                <input
                                    type="file"
                                    ref={fileInputRef}
                                    onChange={handleFileSelection}
                                    className="hidden"
                                    accept="image/jpeg,image/png,application/pdf"
                                    multiple
                                />
                                <button
                                    type="button"
                                    onClick={() => fileInputRef.current?.click()}
                                    className="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-full transition-colors"
                                >
                                    <Paperclip className="w-5 h-5"/>
                                </button>
                                <button
                                    type="button"
                                    onClick={toggleRecording}
                                    className={`p-2 rounded-full transition-colors ${
                                        isRecording
                                            ? 'text-red-500 bg-red-50 dark:bg-red-900/20'
                                            : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'
                                    }`}
                                >
                                    {isRecording ? <StopCircle className="w-5 h-5"/> : <Mic className="w-5 h-5"/>}
                                </button>
                                <Input
                                    type="text"
                                    value={inputMessage}
                                    onChange={(e) => setInputMessage(e.target.value)}
                                    placeholder={t('conversation:typeMessage')}
                                    className="flex-1"
                                    disabled={isTyping || preview.isLoading}
                                />
                                <Button
                                    type="submit"
                                    variant="primary"
                                    disabled={(!inputMessage.trim() && selectedFiles.length === 0) || isTyping || preview.isLoading || (!inputMessage.trim() && selectedFiles.length > 0) }
                                    icon={<Send className="w-5 h-5"/>}
                                >
                                    {t('conversation:send')}
                                </Button>
                                {preview.isLoading && (
                                    <Button
                                        type="button"
                                        variant="danger"
                                        onClick={stopGeneration}
                                    >
                                        {t('conversation:stop')}
                                    </Button>
                                )}
                            </form>
                        </div>